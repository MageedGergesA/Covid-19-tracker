{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.js","api/index.js","Components/Chart/Chart.js","Components/CountryPicker/CountryPicker.js","image/image.png","App.js","index.js","App.module.css","Components/Chart/Chart.module.css","Components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","country","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","a","changable","axios","get","modifiedData","fetchDailyData","dataChart","map","dailyData","total","date","reportDate","countryFetchData","countries","name","Chart","useState","setDailyData","useEffect","fetchDaily","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","props","countrySt","setCountry","countryData","fetchCountry","FormControl","formControl","NativeSelect","onChange","e","countryHandle","target","App","state","fetchedData","setState","this","src","imagePng","alt","image","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.77365329.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1iVlC\",\"card\":\"Cards_card__3oy3r\",\"infected\":\"Cards_infected__2PXzd\",\"recovered\":\"Cards_recovered__1qJFQ\",\"deaths\":\"Cards_deaths__OmTl9\"};","import React from 'react';\r\nimport {Card, Typography, CardContent, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup'\r\n\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards=({data :{confirmed, deaths, recovered, lastUpdate}},{country})=>{\r\n    console.log(country)\r\n    if(!confirmed){\r\n        return <div>Loading .....</div>\r\n}\r\n    return(\r\n        <div className={styles.container}>\r\n            <div>{country}</div>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3}  className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3}  className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recovered cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3}  className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default Cards;","import axios from 'axios';\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData =async (country)=>{\r\n    let changable = url;\r\n    if(country){\r\n        changable = `${url}/countries/${country}`\r\n    }\r\n    try{\r\n    const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changable);\r\n    const modifiedData = {\r\n        confirmed,\r\n        recovered,\r\n        deaths,\r\n        lastUpdate\r\n    }\r\n    return modifiedData;\r\n}\r\n    catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async()=>{\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const dataChart = data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate\r\n        }));\r\n        return dataChart;\r\n    }\r\n    catch(error){\r\n    }\r\n}\r\n\r\nexport const countryFetchData = async()=>{\r\n    try{\r\n        const {data:{countries}} = await axios.get(`${url}/countries`)\r\n        return countries.map((country) => country.name)\r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\nconst Chart=({data:{confirmed, recovered, deaths}, country})=>{\r\n    const [dailyData, setDailyData]=useState([]);\r\n    useEffect(() => {\r\n       const fetchDaily = async()=>{\r\n           setDailyData( await fetchDailyData());\r\n       }\r\n       fetchDaily();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length ?(<Line \r\n            data={{\r\n                labels:dailyData.map(({date})=>date),\r\n                datasets:[{\r\n                    data:dailyData.map(({confirmed})=>confirmed),\r\n                    label:'infected',\r\n                    borderColor:'#3333ff',\r\n                    fill:true\r\n                },\r\n                {\r\n                    data:dailyData.map(({deaths})=>deaths),\r\n                    label:'deaths',\r\n                    borderColor:'red',\r\n                    backgroundColor:'rgba(255,0,0,0.5)',\r\n                    fill:true\r\n                }]\r\n            }}\r\n        />):null\r\n    )\r\n    const barChart =(\r\n        confirmed?\r\n        <Bar\r\n            data={{\r\n                labels:['infected', 'recovered', 'deaths'],\r\n                datasets:[{\r\n                    label:'people',\r\n                    backgroundColor:['rgba(0, 0, 255, .5)','rgba(0, 255, 0, .5)', 'rgba(255, 0, 0, .5)'],\r\n                    data:[confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend:{display:false},\r\n                title:{display:true, text:`current state in ${country}`}\r\n            }}\r\n        />:null\r\n    )\r\n    return(\r\n        <div className={styles.container}>\r\n            {country?barChart:lineChart}\r\n        </div>\r\n    )\r\n}\r\nexport default Chart;","import React,{useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {countryFetchData} from '../../api';\r\nconst CountryPicker=(props)=>{\r\n    const [countrySt, setCountry] = useState([]);\r\n    useEffect(()=>{\r\n        const fetchCountry = async()=>{\r\n            const countryData = await countryFetchData();\r\n            setCountry(countryData);\r\n        }\r\n        fetchCountry();\r\n    },[setCountry])\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect onChange={(e)=>props.countryHandle(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {countrySt.map((country)=><option value={country} key={country}  >{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n        )\r\n}\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React, { Component } from 'react';\r\nimport {Cards, Chart, CountryPicker} from './Components';\r\nimport styles from './App.module.css';\r\nimport  {fetchData} from './api';\r\nimport imagePng from './image/image.png';\r\n\r\nclass App extends Component{\r\n    state={\r\n        data:{},\r\n        country:''\r\n    }\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data:fetchedData})\r\n    }\r\n\r\n    countryHandle= async(country)=>{\r\n        // console.log(country)\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data:fetchedData, country:country})\r\n    }\r\n    render(){\r\n        const {data, country} = this.state\r\n        return(\r\n            <div className={styles.container}>\r\n                <img src={imagePng} alt=\"covid pic\" className={styles.image} />\r\n                <Cards data={data} country={country} />\r\n                <CountryPicker countryHandle={this.countryHandle} />\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3jH-U\",\"image\":\"App_image__1qMWB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__KcqQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__4eA29\"};"],"sourceRoot":""}